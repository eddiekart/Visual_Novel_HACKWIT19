[Java]: Hey [User], thanks for coming up here to meet me!
[User]: Yeah of course, thanks for inviting me. I didn't realize we had such an awesome view!
[Java]: Yeah, but that's not why I wanted to bring you here, I actually had a question!
[User]: Sure thing, what is it?
[Java]: Well first, I wanted to know if you'd made up your mind yet?
[User]: Yeah, I think I really do want to join the student council!
[Java]: Great! Well then about my question. If I'm going to recommend to let you in, I feel like we should know each other better. So I planned a fun little test!
[User]: Oh, ok. What did you have in mind? 
[Java]: Alright, I just need you to answer one question about me, so.
[Java]: If footBall and tennisBall are subclasses of genericBall, how would they be able to call the private variable diameter?
Choice:
***
-You can call the variable directly by using this.diameter, because the subclass has access to the variables of the superclass
***
-2
***
-You have to create a public getDiameter() method, then pass the private variable as a return
***
+1
Replies:
[Java]: Mmm! That's not quite right. Since the variable is private, a subclass would not be able to access it.
[Java]: Yes! I see that you are well-organized in your thought process. That's good!



